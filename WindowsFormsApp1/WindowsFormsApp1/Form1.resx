<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>